name: Trigger partner workflows

on:
  workflow_call:
    inputs:
      pending_matrix:
        description: json string of gh matrix (to be used with fromJson())
        type: string
        required: false
        default: '{"include": [{"resource_id": "rid", "version_id": "vid", "partner_id": "all"}]}'
    secrets:
      PAT:
        required: true

jobs:
  trigger_partners:
    environment: production
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - partner_id: ilastik
          owner: ilastik
          repo: bioimage-io-resources
          workflow: test_bioimageio_resources.yaml

    steps:
    - uses: actions/checkout@v2
    - name: find partner ids
      id: prep
      shell: python
      run: |
        import json

        incl=json.loads('${{ inputs.pending_matrix }}')["include"]
        unique_partner_ids = set([ic['partner_id'] for ic in incl])
        print(f"::set-output name=partner_ids::{list(unique_partner_ids)}")
    - name: trigger ${{ matrix.partner_id }}
      if: contains(steps.prep.outputs.partner_ids, matrix.partner_id) || contains(steps.prep.outputs.partner_ids, 'all')
      shell: python
      run: |
        import os

        import requests

        r = requests.post(
          "${{ github.api_url }}/repos/${{ matrix.owner }}/${{ matrix.repo }}/actions/workflows/${{ matrix.workflow }}/dispatches",
          headers=dict(
            Accept="application/vnd.github.v3+json",
            Authorization="token ${{ secrets.PAT }}",
          ),
          json=dict(
            ref="refs/heads/main",
            inputs=dict(pending_matrix='${{ inputs.pending_matrix }}'),
          ),
        )
        r.raise_for_status()
#    - uses: octokit/request-action@v2.x  # should work, but doesn't: 'GITHUB_TOIKEN' not specified!?
#      env:
#        GITHUB_TOIKEN: ${{ secrets.PAT }}
#      with:
#        route: POST /repos/${{ matrix.owner }}/${{ matrix.repo }}/actions/workflows/${{ matrix.workflow }}/dispatches
#        ref: refs/heads/main
#        inputs: '{"pending_matrix": ''${{ inputs.pending_matrix }}'''

