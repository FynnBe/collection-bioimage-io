name: Trigger partner workflows

on:
  workflow_call:
    inputs:
      pending_matrices:
        description: json string of gh matrix (to be used with fromJson())
        type: string
        required: false
        default: '{"include": [{"resource_id": "rid", "version_id": "vid", "partner_id": "all"}]}'
    secrets:
      PAT:
        required: true

jobs:
  trigger_partners:
    environment: production
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.pending_matrices) }}
        # inputs.pending_matrices looks like:
#        include:
#        - partner_id: ilastik
#          pending_matrix: "... json gh style matrix"
#        - ...

    steps:
    - uses: actions/checkout@v2
    - name: install script deps
      run: pip install ruamel.yaml
    - name: trigger ${{ matrix.partner_id }}
      shell: python
      run: |
        import os
        from pathlib import Path

        import requests
        from ruamel.yaml import YAML

        yaml = YAML(typ="safe")

        # load partner config
        template_path = Path("collection_rdf_template.yaml")
        for partner_config in yaml.load(template_path)["config"]["partners"]:
            if partner_config["id"] == "${{ matrix.partner_id }}":
                break
        else:
            raise RuntimeError(f"Missing partner '${{ matrix.partner_id }}' in {template_path}")

        r = requests.post(
            f"${{ github.api_url }}/repos/{ partner_config['repository'] }/actions/workflows/"
            f"{ partner_config['workflow'] }/dispatches",
            headers=dict(Accept="application/vnd.github.v3+json", Authorization="token ${{ secrets.PAT }}"),
            json=dict(ref=partner_config["workflow_ref"], inputs=dict(pending_matrix="${{ matrix.pending_matrix }}")),
        )
        r.raise_for_status()
