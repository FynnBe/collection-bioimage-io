name: sync

on:
  push:
    branches: [ pyci ]

jobs:
  collect-new-resources:
    runs-on: ubuntu-latest
    outputs:
      model_matrix: ${{ steps.update_known.outputs.model_matrix }}
      rdf_matrix: ${{ steps.update_known.outputs.rdf_matrix }}
      updated_concepts_matrix: ${{ steps.update_known.outputs.updated_concepts_matrix }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
    - name: install script deps
      run: pip install bioimageio.spec
    - name: update known resources
      id: update_known
      run: python scripts/update_known_resources.py collection dist/new_resources
    - name: "Upload environment files of new_resources"
      uses: actions/upload-artifact@v2
      with:
        name: new_resources
        path: dist/new_resources
        retention-days: 1
    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Add changes" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  validate-model:
    needs: collect-new-resources
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.collect-new-resources.outputs.model_matrix) }}  # case: [{doi: ..., weight_format: ...}, ...]

    steps:
    - uses: actions/checkout@v2
    - name: download environment.yaml
      uses: actions/download-artifact@v2
      with:
        name: new_resources
        path: dist/new_resources
    - name: install validation dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        mamba-version: "*"
        channel-priority: strict
        activate-environment: validate
        environment-file: dev/new_resources/${{ matrix.case.doi }}/${{ matrix.case.weight_format }}_env.yaml
        python-version: 3.8
    - name: validate ${{ matrix.validation_case }}
      shell: bash -l {0}
      run: python scripts/generate_validation_summary.py dist/summaries ${{ matrix.validation_case.doi }} ${{ matrix.validation_case.weight_format }}
    - name: "Upload validation summary"
      uses: actions/upload-artifact@v2
      with:
        name: summaries/${{ matrix.validation_case.doi }}/${{ matrix.validation_case.weight_format }}
        path: dist/summaries/${{ matrix.validation_case.doi }}/${{ matrix.validation_case.weight_format }}
        retention-days: 1

  open-prs:
    needs: [collect-new-resources, validate]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.collect-new-resources.outputs.updated_concepts_matrix) }}  # update: [{id: ..., concept_doi: ..., new_version_ids: ...}, ...]

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
    - name: download artefacts
      uses: actions/download-artifact@v2
      with:
        path: dist
    - name: install script deps
      run: pip install bioimageio.core
    - name: set resource status to accepted
      run: python scripts/set_resource_status.py collection ${{ matrix.update.id }} ${{ matrix.update.concept_doi }} "${{ matrix.update.new_version_ids }}" accepted
    - name: update bioimage.io card data
      run: python scripts/update_card_data.py collection ${{ matrix.update.id }} "${{ matrix.update.dois }}" dist/new_resources
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PAT }} # using a PAT will make sure we can trigger the CI in PR
        commit-message: 'Update ${{ matrix.update.id }}'
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: update-${{ matrix.update.id }}
        delete-branch: true
        title: 'Update ${{ matrix.update.id }}'
        body: |
          Update ${{ matrix.update.id }} with new versions: ${{ matrix.update.new_version_ids }}
#          todo: better pr body
        labels: |
          RDF
          automated pr
        draft: false
