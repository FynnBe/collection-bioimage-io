name: build collection and generate auto-update PRs
concurrency: main  # do not run this workflow in parallel

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 1,13 * * *'
  workflow_dispatch: # triggered by http endpoints
  workflow_call:  # triggered by other workflow

jobs:
  update-resources:
    runs-on: ubuntu-latest
    outputs:
      updated_resources_matrix: ${{ steps.update_external.outputs.updated_resources_matrix }}
      found_new_resources: ${{ steps.update_external.outputs.found_new_resources }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # get all branches to check for pending resources by checking if auto-update-... branch exists
    - name: install script deps
      run: pip install requests typer bioimageio.spec lxml
    - name: update external resources
      id: update_external
      run: python scripts/update_external_resources.py --max-resource-count 15
    - name: "Upload collection update"
      uses: actions/upload-artifact@v2
      with:
        name: collection-update
        path: dist
        retention-days: 1
    - run: rm -r dist
    - name: update partner resources
      run: python scripts/update_partner_resources.py
    - name: Deploy updated partner resources to gh-pages ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4.2.3
      with:
        clean: false
        branch: gh-pages
        folder: dist

  get-pending-validations:
    runs-on: ubuntu-latest
    outputs:
      pending_matrix: ${{ steps.update_pending.outputs.pending_matrix }}
      has_pending_matrix: ${{ steps.update_pending.outputs.has_pending_matrix }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages
    - name: install script deps
      run: pip install typer bioimageio.spec lxml
    - run: mkdir dist  # make sure dist folder exists for deployment step
    - name: get pending validations
      id: get_pending
      run: python scripts/get_pending_validations.py
    - name: update rdfs
      id: update_pending
      run: python scripts/update_resource_rdfs.py --pending-matrix '${{ steps.get_pending.outputs.pending_matrix }}'
    - name: (debug) has_pending ${{ steps.update_pending.outputs.has_pending_matrix }}
      run: echo ${{ steps.update_pending.outputs.pending_matrix }}
    - name: Deploy updated rdfs to gh-pages ðŸš€
      if: steps.update_pending.outputs.has_pending_matrix == 'yes'
      uses: JamesIves/github-pages-deploy-action@v4.2.3
      with:
        clean: false
        branch: gh-pages
        folder: dist

  validate:
    needs: get-pending-validations
    if: needs.get-pending-validations.outputs.has_pending_matrix == 'yes'
    uses: ./.github/workflows/validate_resources.yaml
    with:
      pending_matrix: ${{ needs.get-pending-validations.outputs.pending_matrix }}
      has_pending_matrix: ${{ needs.get-pending-validations.outputs.has_pending_matrix }}
      deploy: 'yes'


  build-collection:  # deploy collection rdf to gh-pages
    needs: [update-resources, get-pending-validations, validate]
    if: always()
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages
    - name: install script deps
      run: pip install typer bioimageio.spec boltons lxml requests
    - name: generate collection rdf
      run: python scripts/generate_collection_rdf.py
    - name: Deploy collection rdf to gh-pages ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4.2.3
      with:
        clean: false
        branch: gh-pages
        folder: dist


  open-pr:
    needs: [update-resources]
    if: needs.update-resources.outputs.found_new_resources == 'yes'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # to limit content creation (PRs) on github to avoid getting temporary blocked
      fail-fast: false
      # matrix: update: [{resource_id:..., resource_name:..., new_version_ids:..., new_version_sources:..., maintainers: ...}, ...]
      matrix: ${{ fromJson(needs.update-resources.outputs.updated_resources_matrix) }}

    steps:
    - uses: actions/checkout@v2
    - name: download new collection
      uses: actions/download-artifact@v2
      with:
        name: collection-update
        path: collection-update
    - name: replace resource item folder
      run: |
        mkdir -p "collection/${{ matrix.update.resource_id }}"
        cp -r "collection-update/${{ matrix.update.resource_id }}"/* "collection/${{ matrix.update.resource_id }}"
        rm -rf collection-update
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PAT }}  # using a PAT will make sure we can trigger the CI in PR
        commit-message: 'Update ${{ matrix.update.resource_id }}'
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: auto-update-${{ matrix.update.resource_id }}
        delete-branch: false  # true does not seem to actually delete the PR branch...? we delete the branch in block_pending.yaml
        title: 'Update ${{ matrix.update.resource_name }}'
        body: |
          This is an automatic PR created by the @bioimageiobot regarding changes to the resource item ${{ matrix.update.resource_id }}.
          The following version(s) will be added:
          ${{ matrix.update.new_version_ids_md }}

          You can find their corresponding RDF files here:
          ${{ matrix.update.new_version_sources_md }}

          The corresponding deployment preview (will be) available at: [gh-pages](/bioimage-io/collection-bioimage-io/tree/gh-pages/resources/${{ matrix.update.resource_id }})

          Please review the changes and make sure the new item or version(s) pass the following check list:
          - [ ] Passed the BioImage.IO Spec validator (static validation);
          - [ ] Passed the BioImage.IO CI tests (dynamic validations);
          - [ ] The meta information for the RDF item is complete;
            - [ ] The tags is complete and describes the model;
            - [ ] Naming is intuitive and descriptive, example:  Multi-Organ Nucleus Segmentation (StarDist 2D);
            - [ ] Authors are provided;
            - [ ] Documentation is complete;
              * For models, include an overview, describe how the model is trained, what is the training data, how to use the model, how to validate the results and list the references. TODO: Model documentation template.
          - [ ] Approved by at least one of the BioImage.IO admin team member.

          Maintainers: ${{ matrix.update.maintainers }}

          Note: If you updated or re-uploaded another version for the current item on Zenodo, this PR won't be changed automatically. To proceed, you can do the following:
           1. Block this version, but keep looking for future versions: Edit the current resource.yaml and keep the top-level `status` field as `accepted`, but change the `status` under the current version to `blocked`.
           2. Accept this version and keep looking for future versions: Merge this PR for now.
           3. Keep proposed version(s) (and this resource in general if it is new) as pending: Close this PR without merging.

           Then wait for the CI on the main branch to complete. It should detect the new version(s) and create another PR for the new version(s).

        labels: |
          auto-update
        draft: false
